// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 9073186899019509414),
      name: 'ExamsSourceEntity',
      lastPropertyId: const obx_int.IdUid(5, 5831555493338681694),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3832879536472773965),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3248572231991489161),
            name: 'version',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5350233361890905774),
            name: 'path',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4218953231985927585),
            name: 'examId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5831555493338681694),
            name: 'data',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 4178312833828798766),
      name: 'LastCheckEntity',
      lastPropertyId: const obx_int.IdUid(2, 3116039756497941461),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 872846119530149937),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3116039756497941461),
            name: 'date',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 4178312833828798766),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [1088435484079677948],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        6371960004757600628,
        2877389428520060687,
        2953950660799691103,
        2579889208591651660
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ExamsSourceEntity: obx_int.EntityDefinition<ExamsSourceEntity>(
        model: _entities[0],
        toOneRelations: (ExamsSourceEntity object) => [],
        toManyRelations: (ExamsSourceEntity object) => {},
        getId: (ExamsSourceEntity object) => object.id,
        setId: (ExamsSourceEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ExamsSourceEntity object, fb.Builder fbb) {
          final pathOffset = fbb.writeString(object.path);
          final examIdOffset = fbb.writeString(object.examId);
          final dataOffset = fbb.writeString(object.data);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.version);
          fbb.addOffset(2, pathOffset);
          fbb.addOffset(3, examIdOffset);
          fbb.addOffset(4, dataOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final pathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final versionParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final examIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final dataParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = ExamsSourceEntity(
              id: idParam,
              path: pathParam,
              version: versionParam,
              examId: examIdParam,
              data: dataParam);

          return object;
        }),
    LastCheckEntity: obx_int.EntityDefinition<LastCheckEntity>(
        model: _entities[1],
        toOneRelations: (LastCheckEntity object) => [],
        toManyRelations: (LastCheckEntity object) => {},
        getId: (LastCheckEntity object) => object.id,
        setId: (LastCheckEntity object, int id) {
          object.id = id;
        },
        objectToFB: (LastCheckEntity object, fb.Builder fbb) {
          final dateOffset = fbb.writeString(object.date);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, dateOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = LastCheckEntity(id: idParam, date: dateParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ExamsSourceEntity] entity fields to define ObjectBox queries.
class ExamsSourceEntity_ {
  /// See [ExamsSourceEntity.id].
  static final id =
      obx.QueryIntegerProperty<ExamsSourceEntity>(_entities[0].properties[0]);

  /// See [ExamsSourceEntity.version].
  static final version =
      obx.QueryIntegerProperty<ExamsSourceEntity>(_entities[0].properties[1]);

  /// See [ExamsSourceEntity.path].
  static final path =
      obx.QueryStringProperty<ExamsSourceEntity>(_entities[0].properties[2]);

  /// See [ExamsSourceEntity.examId].
  static final examId =
      obx.QueryStringProperty<ExamsSourceEntity>(_entities[0].properties[3]);

  /// See [ExamsSourceEntity.data].
  static final data =
      obx.QueryStringProperty<ExamsSourceEntity>(_entities[0].properties[4]);
}

/// [LastCheckEntity] entity fields to define ObjectBox queries.
class LastCheckEntity_ {
  /// See [LastCheckEntity.id].
  static final id =
      obx.QueryIntegerProperty<LastCheckEntity>(_entities[1].properties[0]);

  /// See [LastCheckEntity.date].
  static final date =
      obx.QueryStringProperty<LastCheckEntity>(_entities[1].properties[1]);
}
